apiVersion: management.loft.sh/v1
kind: VirtualClusterTemplate
metadata:
  name: argo-cd-vcluster
spec:
  displayName: Argo CD vCluster
  description: >-
    Creates a vCluster instance with Argo CD for use within a vCluster Platform
    Project.
  owner:
    team: loft-admins
  template:
    metadata: {}
    instanceTemplate:
      metadata:
        annotations:
          loft.sh/custom-links: >-
            Repo=https://github.com/loft-demos/{{ .Values.loft.clusterAnnotations.domainPrefix }}-app/
    apps:
      - name: argocd
        version: 2.12.1
        parameters: |
          appValues: |-
            global:
              domain: {{ .Values.loft.virtualClusterName }}-{{ .Values.loft.project }}-{{ .Values.loft.clusterAnnotations.domainPrefix }}.{{ .Values.loft.clusterAnnotations.domain }}
            configs:
              cm:
                create: true
                application.resourceTrackingMethod: annotation
              params:
                "server.insecure": true
                timeout.reconciliation: 0 
              rbac:
                policy.csv: |-
                  g, Administration, role:admin
                  g, Sales, role:admin
                  g, Engineering, role:admin
            server:
              ingress:
                enabled: true
                annotations:
                  nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
                  cert-manager.io/issuer: lets-encrypt-http-issuer
                  nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
                ingressClassName: "nginx"
                hostname: {{ .Values.loft.virtualClusterName }}-{{ .Values.loft.project }}-{{ .Values.loft.clusterAnnotations.domainPrefix }}.{{ .Values.loft.clusterAnnotations.domain }}
                tls: true
              ingressGrpc:
                enabled: false
              certificate:
                enabled: true
                domain: {{ .Values.loft.virtualClusterName }}-{{ .Values.loft.project }}-{{ .Values.loft.clusterAnnotations.domainPrefix }}.{{ .Values.loft.clusterAnnotations.domain }}
                issuer:
                  group: "cert-manager.io"
                  kind: "Issuer"
                  name: "lets-encrypt-http-issuer"
            ## ApplicationSet controller
            applicationSet:
              enabled: true
              logLevel: "debug"
              ingress:
                enabled: true
                ingressClassName: "nginx"
                annotations:
                  nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
                hostname: {{ .Values.loft.virtualClusterName }}-{{ .Values.loft.project }}-{{ .Values.loft.clusterAnnotations.domainPrefix }}-appset.{{ .Values.loft.clusterAnnotations.domain }}
                tls: true
              certificate:
                enabled: true
                domain: {{ .Values.loft.virtualClusterName }}-{{ .Values.loft.project }}-{{ .Values.loft.clusterAnnotations.domainPrefix }}-appset.{{ .Values.loft.clusterAnnotations.domain }}
                issuer:
                  group: "cert-manager.io"
                  kind: "Issuer"
                  name: "lets-encrypt-http-issuer"
            notifications:
              argocdUrl: https://{{ .Values.loft.virtualClusterName }}-{{ .Values.loft.project }}-{{ .Values.loft.clusterAnnotations.domainPrefix }}.{{ .Values.loft.clusterAnnotations.domain }}
              cm:
                create: true
              logLevel: "debug"
              secret:
                labels:
                  loft.sh/project-secret-name: argocd-notifications-secret
      - name: argo-cd-cluster-application-set
    objects: |-
      apiVersion: v1
      kind: Namespace
      metadata:
        name: argocd
      ---
      apiVersion: v1
      kind: Secret
      metadata:
        name: loft-demo-org-cred
        namespace: argocd
        labels:
          loft.sh/project-secret-name: loft-demo-org-cred
          argocd.argoproj.io/secret-type: repo-creds
      type: Opaque
      ---
    pro:
      enabled: true
    helmRelease:
      chart:
        version: 0.21.1
      values: |
        sync:
          toHost:
            ingresses:
              enabled: true
            patches:
              - path: metadata.annotations["cert-manager.io/issuer"]
                reference:
                  apiVersion: cert-manager.io/v1
                  kind: Issuer
            customResources:
              argocdwebhooks.demo.loft.sh:
                enabled: true
              certificates.cert-manager.io:
                enabled: true
                patches:
                  - path: spec.secretName
                    reference:
                      apiVersion: v1
                      kind: Secret
                  - path: spec.issuerRef
                    reference:
                      apiVersion: cert-manager.io/v1
                      kind: Issuer   # defaults to Issuer
                      kindPath: kind # to also allow ClusterIssuer
                      namePath: name
                  - path: status.nextPrivateKeySecretName
                    reference:
                      apiVersion: v1
                      kind: Secret
              issuers.cert-manager.io:
                enabled: true
                patches:
                  - path: spec.acme.privateKeySecretRef.name
                    reference:
                      apiVersion: v1
                      kind: Secret
          fromHost:
            customResources:
              clusterissuers.cert-manager.io:
                enabled: true
                scope: "Cluster"
        controlPlane:
          # Use an embedded managed etcd server instead of using the default SQLite backend
          backingStore:
            etcd:
              embedded:
                enabled: true
          coredns:
            enabled: true
            embedded: true
          statefulSet:
            persistence:
              volumeClaim:
                storageClass: "gp2"
    accessPoint:
      ingress: {}
    spaceTemplate:
      metadata: {}
      objects: |-
        apiVersion: v1
        kind: Secret
        metadata:
          name: argo-webhook-url
        type: Opaque
        stringData:
          url: "https://{{ .Values.loft.virtualClusterName }}-{{ .Values.loft.project }}-{{ .Values.loft.clusterAnnotations.domainPrefix }}.{{ .Values.loft.clusterAnnotations.domain }}/api/webhook"
        ---
        apiVersion: v1
        kind: Secret
        metadata:
          name: argo-appset-webhook-url
        type: Opaque
        stringData:
          url: "https://{{ .Values.loft.virtualClusterName }}-{{ .Values.loft.project }}-{{ .Values.loft.clusterAnnotations.domainPrefix }}-appset.{{ .Values.loft.clusterAnnotations.domain }}/api/webhook"
